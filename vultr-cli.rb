# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class VultrCli < Formula
  desc "Official command-line tool for Vultr services"
  homepage "https://github.com/vultr/vultr-cli"
  version "2.7.0"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/vultr/vultr-cli/releases/download/v2.7.0/vultr-cli_2.7.0_macOs_64-bit.tar.gz"
      sha256 "889ff941034634065592e744d3c81405a3511bfc5cdbb225f1043dce39568768"
    end
    if Hardware::CPU.arm?
      url "https://github.com/vultr/vultr-cli/releases/download/v2.7.0/vultr-cli_2.7.0_macOs_arm64-bit.tar.gz"
      sha256 "ed91b4c550d12961567076579138e81d008a482ee39720df9e6d76d3e7fb9cec"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/vultr/vultr-cli/releases/download/v2.7.0/vultr-cli_2.7.0_linux_64-bit.tar.gz"
      sha256 "cd282429b4fec5910a66667937e91f4c174a909a3db4171112ab9cae1c3ca600"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/vultr/vultr-cli/releases/download/v2.7.0/vultr-cli_2.7.0_linux_arm64-bit.tar.gz"
      sha256 "171299277995dccd03eb81fd320b179c49a5ea7795006932ab49b1cd7407cde1"
    end
  end

  depends_on "go"

  def install
    bin.install "vultr-cli"
    prefix.install_metafiles
  end

  test do
    output = shell_output("#{bin}/vultr-cli version 2>&1", 1)
    assert_match "Please export your VULTR API key as an environment variable or add `api-key` to your config file, eg:\nexport VULTR_API_KEY='<api_key_from_vultr_account>'\n", output
  end
end
