# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class VultrCli < Formula
  desc "Official command-line tool for Vultr services"
  homepage "https://github.com/vultr/vultr-cli"
  version "2.8.5"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/vultr/vultr-cli/releases/download/v2.8.5/vultr-cli_2.8.5_macOs_arm64-bit.tar.gz"
      sha256 "a81938ccd8e92acc97408bb981256430cf6f1fd4f6b78c9988b1af233e9b5622"
    end
    if Hardware::CPU.intel?
      url "https://github.com/vultr/vultr-cli/releases/download/v2.8.5/vultr-cli_2.8.5_macOs_64-bit.tar.gz"
      sha256 "37429a638e6018b0422b46d865b4665c698a9527de223aaa8944afdc8daf14c3"
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/vultr/vultr-cli/releases/download/v2.8.5/vultr-cli_2.8.5_linux_arm64-bit.tar.gz"
      sha256 "7f27b0003cfcb3db85090f71218f509788932d1f1cf72213cb758a3720ca580c"
    end
    if Hardware::CPU.intel?
      url "https://github.com/vultr/vultr-cli/releases/download/v2.8.5/vultr-cli_2.8.5_linux_64-bit.tar.gz"
      sha256 "899d356923ad0c570f7f0f440207b51f2749d9262521e30cc6aea947e511f649"
    end
  end

  depends_on "go"

  def install
    bin.install "vultr-cli"
    prefix.install_metafiles
  end

  test do
    output = shell_output("#{bin}/vultr-cli version 2>&1", 1)
    assert_match "Please export your VULTR API key as an environment variable or add `api-key` to your config file, eg:\nexport VULTR_API_KEY='<api_key_from_vultr_account>'\n", output
  end
end
