# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class VultrCli < Formula
  desc "Official command-line tool for Vultr services"
  homepage "https://github.com/vultr/vultr-cli"
  version "2.8.1"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/vultr/vultr-cli/releases/download/v2.8.1/vultr-cli_2.8.1_macOs_64-bit.tar.gz"
      sha256 "a04804f9fe66ee8158ca0b2478a8e5ec9831b4b34cd19b6e8163550f907e1ed1"
    end
    if Hardware::CPU.arm?
      url "https://github.com/vultr/vultr-cli/releases/download/v2.8.1/vultr-cli_2.8.1_macOs_arm64-bit.tar.gz"
      sha256 "91fe342e2eb0927a960d41213b3b3090f8eec172bc42ce8016791ea2c49aeb10"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/vultr/vultr-cli/releases/download/v2.8.1/vultr-cli_2.8.1_linux_64-bit.tar.gz"
      sha256 "92f5675d96c557e4149700465e7bdccf2f35e77e982549df47cb01a44880cee9"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/vultr/vultr-cli/releases/download/v2.8.1/vultr-cli_2.8.1_linux_arm64-bit.tar.gz"
      sha256 "f9e76cffd0c41a61f49a4398de0ecf88ede4220fa120421190ec6ba5a30346e5"
    end
  end

  depends_on "go"

  def install
    bin.install "vultr-cli"
    prefix.install_metafiles
  end

  test do
    output = shell_output("#{bin}/vultr-cli version 2>&1", 1)
    assert_match "Please export your VULTR API key as an environment variable or add `api-key` to your config file, eg:\nexport VULTR_API_KEY='<api_key_from_vultr_account>'\n", output
  end
end
