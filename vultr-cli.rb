# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class VultrCli < Formula
  desc "Official command-line tool for Vultr services"
  homepage "https://github.com/vultr/vultr-cli"
  version "2.8.4"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/vultr/vultr-cli/releases/download/v2.8.4/vultr-cli_2.8.4_macOs_64-bit.tar.gz"
      sha256 "a6b0b4783dbbc2aa973c54cc8a9476c24dbc71d569b9ae232f05ba498122e41f"
    end
    if Hardware::CPU.arm?
      url "https://github.com/vultr/vultr-cli/releases/download/v2.8.4/vultr-cli_2.8.4_macOs_arm64-bit.tar.gz"
      sha256 "79403f45bfb8faf42ecca8363182cb001501f7eae629482322244161b629e9ed"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/vultr/vultr-cli/releases/download/v2.8.4/vultr-cli_2.8.4_linux_64-bit.tar.gz"
      sha256 "63ddce32bdb4ad2e0736cb02efc5b12d149dcb431c193e60504bc13b774c3670"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/vultr/vultr-cli/releases/download/v2.8.4/vultr-cli_2.8.4_linux_arm64-bit.tar.gz"
      sha256 "b56d323e45ea90f4e5054bc24b4d7fe7cf58cf749e03c502757e4662c72a0da1"
    end
  end

  depends_on "go"

  def install
    bin.install "vultr-cli"
    prefix.install_metafiles
  end

  test do
    output = shell_output("#{bin}/vultr-cli version 2>&1", 1)
    assert_match "Please export your VULTR API key as an environment variable or add `api-key` to your config file, eg:\nexport VULTR_API_KEY='<api_key_from_vultr_account>'\n", output
  end
end
